FROM python:3.9

# For installs without user interaction
ENV DEBIAN_FRONTEND noninteractive
# Prevents Python from writing pyc files to disc (equivalent to python -B)
ENV PYTHONDONTWRITEBYTECODE 1
# Prevents Python from buffering stdout and stderr (equivalent to python -u)
ENV PYTHONUNBUFFERED 1

# Configure the timezone
ENV TZ=Australia/Sydney

# Install system dependencies
RUN apt-get update \
    && apt-get -y install netcat gcc libpq-dev curl apt-utils \
    apt-transport-https debconf-utils gcc build-essential \
    && apt-get clean
# Note: libpq-dev is for Postgres

# Install necessary locales
RUN apt-get install -y locales \
    && echo "en_US.UTF-8 UTF-8" > /etc/locale.gen \
    && locale-gen

# Create user account with sudo rights
RUN useradd -u 1001 -m -d /home/developer -s /bin/bash developer \
    && echo "developer ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

USER developer

# Install Poetry
RUN pip install --upgrade pip
RUN curl -sSL https://install.python-poetry.org | python -
ENV POETRY_CONFIG_VIRTUALENVS_CREATE false

# Set workdir and copy over files
WORKDIR /app
COPY . .

# Install python dependencies
RUN poetry install --no-dev --no-root --no-interaction

# Make our entrypoint script executable - this file helps us wait for Postgres
# To be ready before starting the server
RUN chmod +x orders_api_docker_entry.sh
